{"version":3,"sources":["images/gremlin-01.png","images/gremlin-02.png","images/gremlin-03.png","images/gremlin-04.png","images/v-mogwai-outline-01.svg","images/v-mogwai-color-05.svg","images/v-mogwai-color-06.svg","images/v-mogwai-color-03.svg","images/v-mogwai-color-04.svg","images/v-mogwai-color-07.svg","Header.js","MogwaiArrayData.js","Mogwai.js","index.js"],"names":["module","exports","headerStyle","fontFamily","lineHeight","marginLeft","marginRight","display","flexFlow","headerTitleStyle","fontSize","width","Header","resultTime","hrs","Math","round","random","mins","hFormat","mFormat","is12","String","randomTime","style","flexGrow","textAlign","marginTop","backgroundColor","color","borderRadius","padding","border","flexBasis","mogwaiList","direction","colorImg","faceId","select","gridChildStyle","justifyContent","margin","alignContent","fontWeight","mogwaiStyle","selectedMogwaiStyle","deleteMogwaiStyle","iconButtonsStyle","position","height","zIndex","iconButton01Style","top","left","iconButton02Style","iconButton03Style","iconButton04Style","hideStyle","visibility","showStyle","disableBtnStyle","enableBtnStyle","Mogwai","useState","displayBtn","toggleDisplayBtn","enableBtn","toggleEnableBtn","selected","toggleSelected","selectionStyle","toggleSelectStyle","mogwaiOutline","colorMogwai","toggleColorMogwai","mogwaiImgArray","mogwaiColor01","mogwaiColor02","mogwaiColor03","mogwaiColor04","mogwaiColor05","floor","length","randomMogwai","chooseMogwai","directionState","clockwiseTurn","rotateDirectionString","JSON","stringify","match","directionStyle","transform","mogwaisArray","setMogwaisArray","gremlinImgArray","gremlin01","gremlin02","gremlin03","gremlin04","randomGremlin","chooseGremlin","isGremlin","switchGremlin","className","onClick","Object","assign","id","src","splice","findIndex","this","sunlightDelete","alt","gridStyle","InitLoadMogwais","map","i","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d4972be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gremlin-01.67fdd64c.png\";","module.exports = __webpack_public_path__ + \"static/media/gremlin-02.85fa2f79.png\";","module.exports = __webpack_public_path__ + \"static/media/gremlin-03.f917f2d2.png\";","module.exports = __webpack_public_path__ + \"static/media/gremlin-04.9532329d.png\";","module.exports = __webpack_public_path__ + \"static/media/v-mogwai-outline-01.0a02c3d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/v-mogwai-color-05.3f1b7e9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/v-mogwai-color-06.3a9bc0b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/v-mogwai-color-03.7399cc6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/v-mogwai-color-04.26f71fb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/v-mogwai-color-07.7982257b.svg\";","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// styles\nvar headerStyle = {\n  fontFamily: \"Verdana, Tahoma, sans-serif\",\n  lineHeight: \"1.5rem\",\n  marginLeft: \"24px\",\n  marginRight: \"24px\",\n  display: \"flex\",\n  flexFlow: \"row wrap\",\n};\nvar headerTitleStyle = {\n  fontSize: \"36px\",\n  width: \"100%\",\n};\n\nconst Header = () => {\n  let randomTime = () => {\n    let hrs = Math.round(Math.random() * 4);\n    let mins = Math.round(Math.random() * 60);\n    var hFormat = hrs < 12 ? \"0\" : \"\";\n    var mFormat = mins < 10 ? \"0\" : \"\";\n    var amPm = hrs < 12 ? \"AM\" : \"AM\";\n    var is12 = hrs % 12 === 0;\n\n    return amPm === \"AM\" && !is12\n      ? String(hFormat + hrs + \":\" + mFormat + mins + \" \" + amPm)\n      : \"AM\" && is12\n      ? String(12 + \":\" + mFormat + mins + \" \" + amPm)\n      : is12\n      ? String(hFormat + hrs + \":\" + mFormat + mins + \" \" + amPm)\n      : String(hFormat + (hrs - 12) + \":\" + mFormat + mins + \" \" + amPm);\n  };\n\n  var resultTime = randomTime();\n\n  return (\n    <section style={headerStyle}>\n      <header style={{ flexGrow: \"6\" }}>\n        <h1 style={headerTitleStyle}>Mogwais Practice ReactJS</h1>\n      </header>\n      <article style={{ flexGrow: \"4\", textAlign: \"right\", marginTop: \"20px\" }}>\n        <p>\n          It is approximately{\" \"}\n          <b\n            style={{\n              fontSize: \"20pt\",\n              backgroundColor: \"#000\",\n              color: \"lime\",\n              borderRadius: \"10px\",\n              padding: \"10px\",\n              fontFamily: \"Monaco, Monospace\",\n              border: \"2px solid yellow\",\n            }}\n          >\n            {resultTime}\n          </b>\n        </p>\n      </article>\n      <article style={{ flexBasis: \"100%\" }}>\n        <p>\n          Instructions: Click mogwais to change their colors and see other\n          customization options.\n          <br />\n          <b style={{ color: \"red\" }}>\n            WARNING: Don't feed them after midnight!\n          </b>\n        </p>\n      </article>\n    </section>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// mogwai array data\nconst mogwaiList = [\n  {\n    direction: 0,\n    colorImg: \"\",\n    faceId: 1,\n    select: false,\n  },\n  {\n    direction: 0,\n    colorImg: \"\",\n    faceId: 2,\n    select: false,\n  },\n  {\n    direction: 0,\n    colorImg: \"\",\n    faceId: 3,\n    select: false,\n  }\n]\n\nexport default mogwaiList;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport mogwaiList from \"./MogwaiArrayData.js\";\nimport Buttons from \"./Buttons.js\";\n// images\nimport mogwaiOutline from \"./images/v-mogwai-outline-01.svg\";\nimport mogwaiColor01 from \"./images/v-mogwai-color-05.svg\";\nimport mogwaiColor02 from \"./images/v-mogwai-color-06.svg\";\nimport mogwaiColor03 from \"./images/v-mogwai-color-03.svg\";\nimport mogwaiColor04 from \"./images/v-mogwai-color-04.svg\";\nimport mogwaiColor05 from \"./images/v-mogwai-color-07.svg\";\nimport gremlin01 from \"./images/gremlin-01.png\";\nimport gremlin02 from \"./images/gremlin-02.png\";\nimport gremlin03 from \"./images/gremlin-03.png\";\nimport gremlin04 from \"./images/gremlin-04.png\";\n\n// TO DO: eventually want to render svg and change colors through the svg clicks\n\n// styles\nvar gridChildStyle = {\n  backgroundColor: \"#fff\",\n  border: \"1px solid #ccc\",\n  flexBasis: \"28%\",\n  padding: \"10px\",\n  justifyContent: \"center\",\n  margin: \"10px\",\n  alignContent: \"center\",\n  fontFamily: \"Verdana, Tahoma, 'sans-serif'\",\n  fontWeight: \"300\",\n  fontSize: \"8pt\",\n};\nvar mogwaiStyle = {\n  display: \"block\",\n  width: \"80%\",\n  margin: \"50px auto 0 auto\",\n};\nvar selectedMogwaiStyle = {\n  border: \"2px solid #00ffaa\",\n  display: \"block\",\n  margin: \"49px auto -1px auto\",\n};\nvar deleteMogwaiStyle = {};\n\nvar iconButtonsStyle = {\n  position: \"relative\",\n  borderRadius: \"50%\",\n  height: \"50px\",\n  width: \"50px\",\n  zIndex: \"10\",\n};\nvar iconButton01Style = {\n  top: \"-22px\",\n  left: \"-18px\",\n};\nvar iconButton02Style = {\n  top: \"-22px\",\n  left: \"-8px\",\n};\nvar iconButton03Style = {\n  top: \"-18px\",\n  left: \"4px\",\n  backgroundColor: \"#dfdfdf\",\n};\nvar iconButton04Style = {\n  top: \"-18px\",\n  left: \"16px\",\n};\nvar hideStyle = {\n  visibility: \"hidden\",\n};\nvar showStyle = {\n  visibility: \"visible\",\n};\nvar disableBtnStyle = {\n  backgroundColor: \"#dfdfdf\",\n};\nvar enableBtnStyle = {\n  backgroundColor: \"#fff\",\n};\n\nconst Mogwai = ({ direction, colorImg, faceId, select }) => {\n  // edit mogwai array by using hooks\n  // const [mogwaiArray, setMogwaiArrayState] = useState(...mogwaiList);\n  // add mogwai via water button\n  // const addMogwai = () => {\n  //   setMogwaiArrayState([...mogwaiList, {\n  //     direction: 0,\n  //     colorImg: \"\",\n  //     faceId: 4,\n  //     select: false,\n  //   }])\n  //   return mogwaiArray;\n  // }\n  // console.log(mogwaiArray);\n  // TO DO: add mogwai to array and display via water icon button\n\n  // hide / show button states\n  const [displayBtn, toggleDisplayBtn] = useState(hideStyle);\n  // disable / enable button states\n  const [enableBtn, toggleEnableBtn] = useState(enableBtnStyle);\n\n  // begin single mogwai selection state\n  const [selected, toggleSelected] = useState(false);\n  const [selectionStyle, toggleSelectStyle] = useState(mogwaiStyle);\n  function selectOneMogwai() {\n    if (selected === false) {\n      return (\n        toggleSelected(true),\n        toggleSelectStyle(selectedMogwaiStyle),\n        toggleDisplayBtn(showStyle)\n      );\n    } else {\n      return (\n        toggleSelected(false),\n        toggleSelectStyle(mogwaiStyle),\n        toggleDisplayBtn(hideStyle)\n      );\n    }\n  }\n\n  // TO DO: make selected mogwai make all other mogwai selected states be false\n  // TO DO: make single button for all style state change and have it only apply to the selected mogwai\n\n  // end single mogwai selection state\n\n  // begin toggle color mogwai\n  const [colorMogwai, toggleColorMogwai] = useState(mogwaiOutline);\n\n  const mogwaiImgArray = [\n    mogwaiColor01,\n    mogwaiColor02,\n    mogwaiColor03,\n    mogwaiColor04,\n    mogwaiColor05,\n  ];\n  const [randomMogwai, chooseMogwai] = useState(\n    mogwaiImgArray[Math.floor(Math.random() * mogwaiImgArray.length)]\n  );\n\n  function toggleColor() {\n    if (colorMogwai === mogwaiOutline) {\n      chooseMogwai(\n        mogwaiImgArray[Math.floor(Math.random() * mogwaiImgArray.length)]\n      );\n      return toggleColorMogwai(randomMogwai);\n    } else {\n      if (\n        colorMogwai === gremlin01 ||\n        colorMogwai === gremlin02 ||\n        colorMogwai === gremlin03 ||\n        colorMogwai === gremlin04\n      ) {\n        chooseGremlin(\n          gremlinImgArray[Math.floor(Math.random() * gremlinImgArray.length)]\n        );\n        return toggleColorMogwai(randomGremlin);\n      } else {\n        chooseMogwai(\n          mogwaiImgArray[Math.floor(Math.random() * mogwaiImgArray.length)]\n        );\n        return toggleColorMogwai(randomMogwai);\n      }\n    }\n  }\n  // end toggle color mogwai\n\n  // begin rotating state\n  const [directionState, clockwiseTurn] = useState(0);\n\n  let directStateJSON = JSON.stringify({ directionState });\n  let rotateDirectionString = directStateJSON.match(/\\d+/g) + `deg`;\n\n  var directionStyle = {\n    transform: `rotate(${rotateDirectionString})`,\n  };\n\n  function maxRotate() {\n    if (directionState === 315) {\n      return clockwiseTurn(0);\n    } else {\n      return clockwiseTurn(directionState + 45);\n    }\n  }\n  // end rotating state\n\n  const [mogwaisArray, setMogwaisArray] = useState([...mogwaiList])\n\n  // begin sunlight exposure (delete)\n function sunlightDelete() {\n\n   mogwaisArray.splice(mogwaisArray.findIndex(this), 1)\n\n    return setMogwaisArray([...mogwaisArray])\n  }\n\n  // TO DO: Get this to function properly by pulling out the array item too!\n\n  // end sunlight exposure (delete)\n\n  // begin gremlin morph state (give water)\n  const gremlinImgArray = [gremlin01, gremlin02, gremlin03, gremlin04];\n\n  const [randomGremlin, chooseGremlin] = useState(\n    gremlinImgArray[Math.floor(Math.random() * gremlinImgArray.length)]\n  );\n\n  const [isGremlin, switchGremlin] = useState(false);\n\n  function gremlinMogwaiCheck() {\n    if (\n      colorMogwai === gremlin01 ||\n      colorMogwai === gremlin02 ||\n      colorMogwai === gremlin03 ||\n      colorMogwai === gremlin04\n    ) {\n      return switchGremlin(true), toggleEnableBtn(disableBtnStyle);\n    } else {\n      chooseGremlin(\n        gremlinImgArray[Math.floor(Math.random() * gremlinImgArray.length)]\n      );\n      toggleColorMogwai(randomGremlin);\n      return colorMogwai, switchGremlin(true), toggleEnableBtn(disableBtnStyle);\n    }\n  }\n\n  // end gremlin morph state (give water)\n\n  return (\n    <div\n      className=\"mogwai\"\n      onClick={() => selectOneMogwai()}\n      style={Object.assign(\n        {},\n        gridChildStyle,\n        selectionStyle,\n        deleteMogwaiStyle\n      )}\n    >\n      <button\n        id=\"direction-btn\"\n        style={Object.assign(\n          {},\n          iconButtonsStyle,\n          iconButton01Style,\n          displayBtn\n        )}\n        onClick={() => maxRotate()}\n      >\n        <img src=\"https://img.icons8.com/android/24/000000/rotate-right.png\" />\n      </button>\n      <button\n        id=\"delete-btn\"\n        style={Object.assign(\n          {},\n          iconButtonsStyle,\n          iconButton02Style,\n          displayBtn\n        )}\n        onClick={() => sunlightDelete()}\n      >\n        <img src=\"https://img.icons8.com/android/24/000000/sun.png\" />\n      </button>\n      <button\n        id=\"add-btn\"\n        style={Object.assign(\n          {},\n          iconButtonsStyle,\n          iconButton03Style,\n          displayBtn\n        )}\n      // onClick={() => addMogwai()}\n      >\n        <img src=\"https://img.icons8.com/windows/32/000000/water.png\" />\n      </button>\n      <button\n        id=\"gremlin-btn\"\n        style={Object.assign(\n          {},\n          iconButtonsStyle,\n          iconButton04Style,\n          displayBtn,\n          enableBtn\n        )}\n        onClick={() => gremlinMogwaiCheck()}\n      >\n        <img src=\"https://img.icons8.com/small/30/000000/poultry-leg.png\" />\n      </button>\n\n      <img\n        src={colorMogwai}\n        width=\"100%\"\n        id={faceId}\n        alt=\"mogwai\"\n        style={Object.assign(directionStyle, mogwaiStyle)}\n        onClick={() => toggleColor()}\n      />\n\n      <p>\n        Number: <b>{faceId}</b>\n      </p>\n      <p>\n        Selected: <b>{selected ? \"yes\" : \"no\"}</b>\n      </p>\n      <p>\n        Direction: <b>{directionState} degrees</b>\n      </p>\n      <p>\n        Mogwai || Gremlin ? &nbsp; <b>{isGremlin ? \"gremlin\" : \"mogwai\"}</b>\n      </p>\n    </div>\n  )\n};\n\nexport default Mogwai;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./Header.js\";\nimport Mogwai from \"./Mogwai.js\";\nimport mogwaiList from \"./MogwaiArrayData.js\";\n\nvar gridStyle = {\n  width: \"100%\",\n  display: \"flex\",\n  flexFlow: \"row wrap\",\n  justifyContent: \"center\",\n  padding: \"0 0 20px 0\",\n};\n\nconst InitLoadMogwais = () => {\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"mogwai-grid\" style={gridStyle}>\n        {mogwaiList.map(({ direction, colorImg, faceId, select }, i) => (\n          <Mogwai\n            key={i}\n            direction={direction}\n            colorImg={colorImg}\n            faceId={faceId}\n            select={select}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <InitLoadMogwais />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}